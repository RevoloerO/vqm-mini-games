/* magical_skins.css */

/* --- Fireball Jutsu Skin --- */
.ball.fireball {
  background: transparent;
  width: 200px;
  height: 200px;
  box-shadow: none;
  filter: contrast(1.5) brightness(1.5);
  /* This skin is now just a visual anchor for the particle system */
}

.flame {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 200px;
  height: 200px;
  border-radius: 50% 40% 30% 40%;
  background: #ffc93c;
  filter: blur(25px);
  animation: flame-movement 4s infinite linear;
  mix-blend-mode: screen;
  transform: translate(-50%, -50%); /* Centering fix */
}

.flame:nth-child(2) { width: 150px; height: 150px; background: #ff8a00; animation-duration: 3s; animation-delay: -1s; }
.flame:nth-child(3) { width: 100px; height: 100px; background: #a40606; animation-duration: 2.5s; animation-delay: -2s; }
.flame:nth-child(4) { width: 250px; height: 250px; background: #ff5733; animation-duration: 5s; animation-delay: -3s; }
.flame:nth-child(5) { width: 180px; height: 180px; background: #ffc300; animation-duration: 3.5s; animation-delay: -0.5s; }


/* --- REWORKED: Fire Particle Effect --- */
.fire-particle-container {
  position: absolute;
  /* This container needs to be relative to the main container, not the ball */
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  overflow: hidden; /* Prevent particles from showing outside the main view */
}

.fire-particle {
  position: absolute;
  will-change: transform, opacity;
  pointer-events: none;
  filter: contrast(1.5) brightness(1.5);
}

.fire-particle-inner {
  width: 100%;
  height: 100%;
  border-radius: 50%;
  background: radial-gradient(circle, #ffffff 0%, #ffeaa7 30%, #ffc93c 60%, #ff8a00 100%);
  background-position: center;
  filter: blur(4px);
  mix-blend-mode: screen;
  /* The waving animation is now a flicker that does NOT use transform */
  animation: fire-flicker 0.5s infinite ease-in-out;
}

/* Add variation to the flicker animation */
.fire-particle-inner.wave-2 {
  animation-duration: 0.4s;
  animation-direction: alternate-reverse;
}
.fire-particle-inner.wave-3 {
  animation-duration: 0.6s;
}

/* This animation no longer uses the 'transform' property, fixing the conflict. */
@keyframes fire-flicker {
  0% {
    opacity: 1;
    background-size: 100% 100%;
  }
  50% {
    opacity: 0.8;
    background-size: 130% 130%;
  }
  100% {
    opacity: 1;
    background-size: 100% 100%;
  }
}


/* --- Ice Orb Skin --- */
.ball.ice-orb {
    background: radial-gradient(circle, #ffffff 10%, #dbeafe 40%, #93c5fd 80%);
    box-shadow: inset 0 0 30px #fff, inset 0 0 60px #bfdbfe, 0 0 50px -10px #3b82f6;
    animation: ice-pulse 5s infinite ease-in-out;
    overflow: hidden;
}

.ice-shard-svg {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    filter: drop-shadow(0 0 6px #fff) drop-shadow(0 0 15px #60a5fa);
    mix-blend-mode: screen;
    animation: slow-rotate var(--duration, 20s) var(--delay, 0s) infinite linear;
}

.ice-shard-path {
    fill: none;
    stroke: rgba(255, 255, 255, 0.7);
    stroke-width: 1.5px;
    stroke-linecap: round;
    stroke-linejoin: round;
    animation: shimmer 4s infinite ease-in-out alternate;
}

/* --- Dragon Ball Skin --- */
.ball.dragon-ball {
    background: radial-gradient(circle at 35% 35%, #ffc947, #ff9800);
    box-shadow: 0 10px 30px rgba(255, 152, 0, 0.4), inset 0 0 25px #ffc947;
    overflow: hidden;
    animation: dragon-ball-glow 3s infinite alternate;
}

.crystal-reflection {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: radial-gradient(circle at 40% 40%, white, transparent 40%), radial-gradient(circle at 65% 65%, rgba(255, 255, 255, 0.5), transparent 30%);
    opacity: 0.2;
    mix-blend-mode: overlay;
    animation: slow-rotate 25s infinite linear reverse;
}

.star-container {
    position: absolute;
    width: 100%;
    height: 100%;
    transition: transform 0.1s linear;
    filter: drop-shadow(0 0 8px #ffeb3b);
    animation: star-pulse 3s infinite ease-in-out;
}

.dragon-ball-star {
    position: absolute;
    width: 12%;
    height: 12%;
    transform: translate(-50%, -50%);
    animation: star-appear 0.4s ease-out forwards;
}

.dragon-ball-star svg {
    width: 100%;
    height: 100%;
    fill: #d80000;
    filter: drop-shadow(0 0 2px #7f0000);
}

/* --- PalantÃ­r (Seeing Stone) Skin --- */
.ball.palantir {
  background: radial-gradient(circle at 65% 35%, #4a4a5a, #111116);
  box-shadow: inset 0 0 50px rgba(0,0,0,0.8), 0 10px 40px rgba(0,0,0,0.5);
  overflow: hidden;
  position: relative;
  /* Custom properties for JS to hook into */
  --mouse-x: 50%;
  --mouse-y: 50%;
  --glow-opacity: 0;
  --warning-intensity: 0; /* 0 = outer edge of warning, 1 = inner edge */
}

/* The swirling visions inside the stone */
.ball.palantir::before {
  content: '';
  position: absolute;
  top: -25%;
  left: -25%;
  width: 150%;
  height: 150%;
  background: 
    radial-gradient(circle at 20% 30%, #aabbee44, transparent 40%),
    radial-gradient(circle at 80% 70%, #eeccff33, transparent 40%),
    radial-gradient(circle at 50% 50%, #ffffff22, transparent 35%);
  mix-blend-mode: screen;
  filter: blur(20px);
  animation: slow-rotate 25s infinite linear, slow-rotate-reverse 35s infinite linear;
  transition: background 0.5s ease-out, filter 0.5s ease-out;
}

/* Warning state (mouse is near but not on the ball) */
.ball.palantir.is-warning::before {
  /* Interpolate background color from yellow to orange based on proximity */
  --hue1: calc(50 - (20 * var(--warning-intensity))); /* 50 (yellow) -> 30 (orange) */
  --hue2: calc(45 - (25 * var(--warning-intensity))); /* 45 (yellow-orange) -> 20 (red-orange) */
  background:
    radial-gradient(circle at 20% 30%, hsla(var(--hue1), 100%, 60%, 0.6), transparent 50%),
    radial-gradient(circle at 80% 70%, hsla(var(--hue2), 100%, 55%, 0.55), transparent 50%),
    radial-gradient(circle at 50% 50%, hsla(var(--hue2), 100%, 50%, 0.5), transparent 45%);
  filter: blur(25px);
}

/* Angry state (mouse is directly on the ball) */
.ball.palantir.is-angry::before {
  background: 
    radial-gradient(circle at 20% 30%, #ff450099, transparent 50%),
    radial-gradient(circle at 80% 70%, #a1000088, transparent 50%),
    radial-gradient(circle at 50% 50%, #d8000077, transparent 45%);
  filter: blur(30px); /* More blurry, more smokey */
}


/* The interactive glow that follows the mouse */
.ball.palantir::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  background: radial-gradient(
    circle at var(--mouse-x) var(--mouse-y),
    rgba(255, 255, 255, 0.25),
    transparent 25%
  );
  transition: opacity 0.3s ease;
  opacity: var(--glow-opacity);
}

/* The container for the fleeting visions effect */
.palantir-visions {
  position: absolute;
  top: 0; left: 0;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  animation: slow-rotate 40s infinite linear;
  z-index: 0;
}

.palantir-visions::before {
  content: '';
  position: absolute;
  top: 0; left: 0;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  background:
    radial-gradient(ellipse at 20% 80%, #ffffff33, transparent 50%),
    radial-gradient(ellipse at 80% 30%, #eeccff22, transparent 50%);
  mix-blend-mode: soft-light;
  filter: blur(10px);
  opacity: 0;
  animation: show-vision 15s infinite ease-in-out;
  animation-delay: -5s;
}

/* The dragon pupil element */
.palantir-pupil {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 12px;
  height: 60px;
  background: radial-gradient(ellipse at center, #ff8a00, #d80000 60%, #4d0000 100%);
  border-radius: 50%;
  box-shadow: 0 0 5px #ff0000, 0 0 10px #ff0000, inset 0 0 3px #000;
  transform: translate(-50%, -50%) rotate(0deg);
  /* Slower transitions for a smoother effect */
  transition: transform 0.1s linear, width 0.5s ease-in-out, height 0.5s ease-in-out, background 0.5s ease, box-shadow 0.5s ease;
  z-index: 1;
}

/* Pupil in warning state */
.ball.palantir.is-warning .palantir-pupil {
  --pupil-hue: calc(50 - (20 * var(--warning-intensity))); /* 50 (yellow) -> 30 (orange) */
  background: radial-gradient(ellipse at center, hsla(var(--pupil-hue), 100%, 88%, 1), hsla(var(--pupil-hue), 100%, 50%, 1) 60%, hsla(var(--pupil-hue), 95%, 20%, 1) 100%);
  box-shadow: 0 0 8px hsla(var(--pupil-hue), 100%, 50%, 1), 0 0 15px hsla(var(--pupil-hue), 100%, 50%, 1), inset 0 0 4px #000;
}

/* Pupil in angry state */
.ball.palantir.is-angry .palantir-pupil {
  width: 8px; /* Narrower, angrier slit */
  height: 70px; /* Taller */
  background: radial-gradient(ellipse at center, #ffdd00, #ff4500 60%, #a10000 100%); /* Brighter, more intense colors */
  animation: angry-glow 1.5s infinite ease-in-out;
}

@keyframes show-vision {
  0%, 100% { opacity: 0; transform: scale(0.9); }
  20% { opacity: 0.7; transform: scale(1); }
  80% { opacity: 0.7; transform: scale(1); }
}

@keyframes slow-rotate-reverse {
  from { transform: rotate(360deg); }
  to { transform: rotate(0deg); }
}

@keyframes angry-glow {
  0% {
    box-shadow: 0 0 5px #ff0000, 0 0 10px #ff0000, inset 0 0 3px #000;
  }
  50% {
    box-shadow: 0 0 12px #ff4500, 0 0 28px #d80000, inset 0 0 5px #000;
  }
  100% {
    box-shadow: 0 0 5px #ff0000, 0 0 10px #ff0000, inset 0 0 3px #000;
  }
}
